{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/brian/Code/single-store-classes-next-app/src/components/Form.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport { useState, useCallback, memo } from \"react\";\nexport const config = {\n  amp: true\n};\nconst Form = /*#__PURE__*/memo(props => {\n  const {\n    0: formData,\n    1: setFormData\n  } = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const {\n    0: userAccount,\n    1: setUserAccount\n  } = useState({\n    username: \"\",\n    password: \"\",\n    id: 0\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(res => res.json()).then(res => {\n      setUserAccount({\n        username: res.username,\n        password: res.password,\n        id: res.id\n      });\n    }).catch(err => {\n      throw new Error(err);\n    });\n  };\n\n  const handleSetFormData = useCallback(e => {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [e.target.name]: e.target.value\n    }));\n  }, [formData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"submit\",\n      target: \"\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleSetFormData,\n        type: \"text\",\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleSetFormData,\n        type: \"text\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onSubmit: handleSubmit,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [formData.username, \"...\", formData.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      children: userAccount.id ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"UserName: \", userAccount.username, \" | Password: \", userAccount.password, \" | ID: \", userAccount.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n});\nexport default Form;","map":{"version":3,"sources":["/home/brian/Code/single-store-classes-next-app/src/components/Form.tsx"],"names":["React","useState","useCallback","memo","config","amp","Form","props","formData","setFormData","username","password","userAccount","setUserAccount","id","handleSubmit","e","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","json","catch","err","Error","handleSetFormData","target","name","value"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useState, useEffect, useCallback, memo } from \"react\";\n\nexport const config = { amp: true }\n\ntype Props = {\n  props: {\n    data: {}[];\n  };\n};\n\ntype FormDataInterface = {\n  username: string,\n  password: string\n}\n\ntype UserAccountInterface = {\n  username: string,\n  password: string,\n  id: number\n}\n\nconst Form: React.NamedExoticComponent<| React.RefAttributes<React.Component<Props, any, any>>\n  | { children?: React.ReactNode }> = memo((props) => {\n  const [formData, setFormData] = useState<FormDataInterface>({\n    username: \"\",\n    password: \"\"\n  });\n  const [userAccount, setUserAccount] = useState<UserAccountInterface>({\n    username: \"\",\n    password: \"\",\n    id: 0\n  });\n  type Fetch = {\n    input: Request | string,\n    init?: RequestInit | Promise<Response>\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(res => res.json())\n      .then(res => {\n        setUserAccount({\n          username: res.username,\n          password: res.password,\n          id: res.id\n        });\n      })\n      .catch(err => {\n        throw new Error(err);\n      });\n  };\n\n  const handleSetFormData = useCallback(\n    (e) => {\n      setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n      });\n    },\n    [formData]\n  );\n\n  return (\n    <>\n      <form action=\"submit\" target=\"\" onSubmit={handleSubmit}>\n        <input onChange={handleSetFormData} type=\"text\" name=\"username\" />\n        <input onChange={handleSetFormData} type=\"text\" name=\"password\" />\n        <button onSubmit={handleSubmit} type=\"submit\">\n          Submit\n        </button>\n      </form>\n      <article>\n        <p>\n          {formData.username}...{formData.password}\n        </p>\n      </article>\n      <article>\n        {\n          userAccount.id ?\n            <p>\n              UserName: {userAccount.username} |\n              Password: {userAccount.password} |\n              ID: {userAccount.id}\n            </p> :\n            null\n        }\n      </article>\n    </>\n  );\n});\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}