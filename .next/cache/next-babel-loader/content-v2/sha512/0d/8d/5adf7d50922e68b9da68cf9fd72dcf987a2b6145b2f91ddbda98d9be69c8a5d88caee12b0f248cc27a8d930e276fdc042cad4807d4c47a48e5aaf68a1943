{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport { useState, useCallback, memo } from \"react\";\nexport const config = {\n  amp: true\n};\nconst Form = /*#__PURE__*/memo(props => {\n  const {\n    0: formData,\n    1: setFormData\n  } = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const {\n    0: userAccount,\n    1: setUserAccount\n  } = useState({\n    username: \"\",\n    password: \"\",\n    id: 0\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(res => res.json()).then(res => {\n      setUserAccount({\n        username: res.username,\n        password: res.password,\n        id: res.id\n      });\n    }).catch(err => {\n      throw new Error(err);\n    });\n  };\n\n  const handleSetFormData = useCallback(e => {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [e.target.name]: e.target.value\n    }));\n  }, [formData]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"form\", {\n      action: \"/\",\n      target: \"_blank\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsx(\"input\", {\n        onChange: handleSetFormData,\n        type: \"text\",\n        name: \"username\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        onChange: handleSetFormData,\n        type: \"text\",\n        name: \"password\"\n      }), /*#__PURE__*/_jsx(\"button\", {\n        onSubmit: handleSubmit,\n        type: \"submit\",\n        children: \"Submit\"\n      })]\n    }), /*#__PURE__*/_jsx(\"article\", {\n      children: /*#__PURE__*/_jsxs(\"p\", {\n        children: [formData.username, \"...\", formData.password]\n      })\n    }), /*#__PURE__*/_jsx(\"article\", {\n      children: userAccount.id ? /*#__PURE__*/_jsxs(\"p\", {\n        children: [\"UserName: \", userAccount.username, \" | Password: \", userAccount.password, \" | ID: \", userAccount.id]\n      }) : null\n    })]\n  });\n});\nexport default Form;","map":null,"metadata":{},"sourceType":"module"}