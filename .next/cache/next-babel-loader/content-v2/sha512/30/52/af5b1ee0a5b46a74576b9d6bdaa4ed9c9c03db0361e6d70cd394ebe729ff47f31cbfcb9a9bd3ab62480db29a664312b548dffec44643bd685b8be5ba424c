{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/brian/Code/single-store-classes-next-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/brian/Code/single-store-classes-next-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/brian/Code/single-store-classes-next-app/src/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport { useState, useCallback, memo } from \"react\";\nvar Form = /*#__PURE__*/memo(_c = _s(function () {\n  _s();\n\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      formData = _useState[0],\n      setFormData = _useState[1];\n\n  var handleSetFormData = useCallback(function (e) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, e.target.name, e.target.value)));\n  }, [formData]);\n\n  var _ = 0,\n      _ref = _slicedToArray(_, 2),\n      count = _ref[0],\n      setCount = _ref[1];\n\n  var handleCounter = function handleCounter() {\n    setCount(_objectSpread(_objectSpread({}, count), {}, {\n      value: count.value + 1\n    }));\n  };\n\n  console.log('render');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        display: \"flex\",\n        flexFlow: \"column nowrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        handleCounter: handleCounter,\n        children: count.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleSetFormData,\n        type: \"text\",\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleSetFormData,\n        type: \"text\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n}, \"SOyNpZMbPWQfLVoNMpJrPjkJZ9c=\"));\n_c2 = Form;\nexport default Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Form$memo\");\n$RefreshReg$(_c2, \"Form\");","map":{"version":3,"sources":["/home/brian/Code/single-store-classes-next-app/src/pages/index.tsx"],"names":["React","useState","useCallback","memo","Form","username","password","formData","setFormData","handleSetFormData","e","target","name","value","count","setCount","handleCounter","console","log","display","flexFlow","justifyContent","alignItems","height"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAA8BC,WAA9B,EAA2CC,IAA3C,QAAuD,OAAvD;AAEA,IAAMC,IAAI,gBAAGD,IAAI,SAAC,YAAM;AAAA;;AAAA,kBACUF,QAAQ,CAAC;AAACI,IAAAA,QAAQ,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAAD,CADlB;AAAA,MACfC,QADe;AAAA,MACLC,WADK;;AAEtB,MAAMC,iBAAiB,GAAGP,WAAW,CAAC,UAACQ,CAAD,EAAO;AAC3CF,IAAAA,WAAW,iCACJD,QADI,2BAERG,CAAC,CAACC,MAAF,CAASC,IAFD,EAEQF,CAAC,CAACC,MAAF,CAASE,KAFjB,GAAX;AAOD,GARoC,EAQlC,CAACN,QAAD,CARkC,CAArC;;AAFsB,UAYG,CAZH;AAAA;AAAA,MAYjBO,KAZiB;AAAA,MAYVC,QAZU;;AAcxB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBD,IAAAA,QAAQ,iCAAKD,KAAL;AAAYD,MAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,GAAc;AAAjC,OAAR;AACH,GAFD;;AAIEI,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,sBACE;AAAA,2BACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,QAAQ,EAAE,eAFL;AAGLC,QAAAA,cAAc,EAAE,QAHX;AAILC,QAAAA,UAAU,EAAE,QAJP;AAKLC,QAAAA,MAAM,EAAE;AALH,OADT;AAAA,8BASI;AAAI,QAAA,aAAa,EAAEP,aAAnB;AAAA,kBAAmCF,KAAK,CAACD;AAAzC;AAAA;AAAA;AAAA;AAAA,eATJ,eAUE;AAAO,QAAA,QAAQ,EAAEJ,iBAAjB;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,eAVF,eAWE;AAAO,QAAA,QAAQ,EAAEA,iBAAjB;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,eAXF,eAYE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD,CAtCgB,kCAAjB;MAAML,I;AAwCN,eAAeA,IAAf","sourcesContent":["import * as React from \"react\";\nimport { useState, useEffect, useCallback, memo } from \"react\";\n\nconst Form = memo(() => {\n  const [formData, setFormData] = useState({username: \"\", password: \"\"});\n  const handleSetFormData = useCallback((e) => {\n    setFormData({\n        ...formData,\n      [e.target.name]: e.target.value,\n    });\n\n\n\n  }, [formData]);  \n\nconst [count, setCount] = (0)\n\nconst handleCounter = () => {\n    setCount({...count, value: count.value + 1})\n}\n\n  console.log('render')\n\n  return (\n    <>\n      <form\n        style={{\n          display: \"flex\",\n          flexFlow: \"column nowrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n          <h1 handleCounter={handleCounter}>{count.value}</h1>\n        <input onChange={handleSetFormData} type=\"text\" name=\"username\" />\n        <input onChange={handleSetFormData} type=\"text\" name=\"password\" />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </>\n  );\n});\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}