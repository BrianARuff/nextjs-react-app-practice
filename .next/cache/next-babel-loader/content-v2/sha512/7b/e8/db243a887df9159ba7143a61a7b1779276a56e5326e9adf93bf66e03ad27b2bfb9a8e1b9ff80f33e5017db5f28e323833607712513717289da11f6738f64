{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/brian/Code/single-store-classes-next-app/src/pages/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport { useState, useCallback, memo } from \"react\";\nconst Form = /*#__PURE__*/memo(props => {\n  const {\n    0: apiData,\n    1: setApiData\n  } = useState([]);\n  const {\n    0: formData,\n    1: setFormData\n  } = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefautl();\n  };\n\n  const handleSetFormData = useCallback(e => {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [e.target.name]: e.target.value\n    }));\n  }, [formData]);\n  console.log(apiData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        display: \"flex\",\n        flexFlow: \"column nowrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleSetFormData,\n        type: \"text\",\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleSetFormData,\n        type: \"text\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), apiData.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            color: \"red\",\n            fontSize: \"24px\"\n          },\n          children: data.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n});\nexport const getStaticProps = () => {\n  return fetch(\"https://jsonplaceholder.typicode.com/todos\").then(res => res.json()).then(res => {\n    return {\n      props: {\n        data: res\n      }\n    };\n  });\n};\nexport default Form;","map":{"version":3,"sources":["/home/brian/Code/single-store-classes-next-app/src/pages/index.tsx"],"names":["React","useState","useCallback","memo","Form","props","apiData","setApiData","formData","setFormData","username","password","handleSubmit","e","preventDefautl","handleSetFormData","target","name","value","console","log","display","flexFlow","justifyContent","alignItems","height","map","data","color","fontSize","completed","title","id","getStaticProps","fetch","then","res","json"],"mappings":";;;;;;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAA8BC,WAA9B,EAA2CC,IAA3C,QAAuD,OAAvD;AAEA,MAAMC,IAAI,gBAAGD,IAAI,CAAEE,KAAD,IAAW;AAC3B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC;AAAES,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAAD,CAAxC;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAGb,WAAW,CAClCW,CAAD,IAAO;AACLJ,IAAAA,WAAW,iCACND,QADM;AAET,OAACK,CAAC,CAACG,MAAF,CAASC,IAAV,GAAiBJ,CAAC,CAACG,MAAF,CAASE;AAFjB,OAAX;AAID,GANkC,EAOnC,CAACV,QAAD,CAPmC,CAArC;AAUAW,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AAEA,sBACE;AAAA,4BACE;AACE,MAAA,QAAQ,EAAEM,YADZ;AAEE,MAAA,KAAK,EAAE;AACLS,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,QAAQ,EAAE,eAFL;AAGLC,QAAAA,cAAc,EAAE,QAHX;AAILC,QAAAA,UAAU,EAAE,QAJP;AAKLC,QAAAA,MAAM,EAAE;AALH,OAFT;AAAA,8BAUE;AAAO,QAAA,QAAQ,EAAEV,iBAAjB;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAO,QAAA,QAAQ,EAAEA,iBAAjB;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAeGT,OAAO,CAACoB,GAAR,CAAaC,IAAD,IAAU;AACrB,0BACE;AAAA,gCACE;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,KAAT;AAAgBC,YAAAA,QAAQ,EAAE;AAA1B,WAAX;AAAA,oBAAgDF,IAAI,CAACG;AAArD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAASJ,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPA,CAfH;AAAA,kBADF;AA0BD,CA9CgB,CAAjB;AAgDA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAOC,KAAK,CAAC,4CAAD,CAAL,CACJC,IADI,CACEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADV,EAEJF,IAFI,CAEEC,GAAD,IAAS;AACb,WAAO;AACL/B,MAAAA,KAAK,EAAE;AAAEsB,QAAAA,IAAI,EAAES;AAAR;AADF,KAAP;AAGD,GANI,CAAP;AAOD,CARM;AAUP,eAAehC,IAAf","sourcesContent":["import { GetStaticProps, InferGetServerSidePropsType } from \"next\";\nimport * as React from \"react\";\nimport { useState, useEffect, useCallback, memo } from \"react\";\n\nconst Form = memo((props) => {\n  const [apiData, setApiData] = useState([]);\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n\n  const handleSubmit = (e) => {\n    e.preventDefautl();\n  };\n\n  const handleSetFormData = useCallback(\n    (e) => {\n      setFormData({\n        ...formData,\n        [e.target.name]: e.target.value,\n      });\n    },\n    [formData]\n  );\n\n  console.log(apiData);\n\n  return (\n    <>\n      <form\n        onSubmit={handleSubmit}\n        style={{\n          display: \"flex\",\n          flexFlow: \"column nowrap\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        <input onChange={handleSetFormData} type=\"text\" name=\"username\" />\n        <input onChange={handleSetFormData} type=\"text\" name=\"password\" />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {apiData.map((data) => {\n        return (\n          <ul key={data.id}>\n            <li style={{ color: \"red\", fontSize: \"24px\" }}>{data.completed}</li>\n            <li>{data.title}</li>\n          </ul>\n        );\n      })}\n    </>\n  );\n});\n\nexport const getStaticProps = () => {\n  return fetch(\"https://jsonplaceholder.typicode.com/todos\")\n    .then((res) => res.json())\n    .then((res) => {\n      return {\n        props: { data: res },\n      };\n    });\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}