{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/brian/Code/single-store-classes-next-app/src/components/ErrorBoundary.tsx\";\nimport * as React from \"react\";\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    return this.state.hasError ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Something went wrong.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : this.props.children;\n  }\n\n}","map":{"version":3,"sources":["/home/brian/Code/single-store-classes-next-app/src/components/ErrorBoundary.tsx"],"names":["React","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","console","render","children"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAMA,eAAe,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA6E;AAC1FC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAED,SAAOC,wBAAP,CAAgCC,KAAhC,EAAuC;AACrC,WAAO;AACLF,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAeE,SAAf,EAA2C;AAC1DC,IAAAA,OAAO,CAACH,KAAR,CAAcA,KAAd,EAAqBE,SAArB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKP,KAAL,CAAWC,QAAX,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,GAGL,KAAKF,KAAL,CAAWS,QAHb;AAKD;;AAxByF","sourcesContent":["import * as React from \"react\";\n\ntype ErrorBoundaryStateInterface = {\n  hasError: boolean\n}\n\nexport default class ErrorBoundary extends React.Component<{}, ErrorBoundaryStateInterface> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    return this.state.hasError\n      ? <h1>Something went wrong.</h1>\n      :\n      this.props.children;\n\n  }\n\n}"]},"metadata":{},"sourceType":"module"}