{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/brian/Code/single-store-classes-next-app/src/pages/index.tsx\";\nimport * as React from \"react\";\nimport Form from \"../components/Form\";\nimport Head from \"next/head\";\nimport { Grid } from \"@material-ui/core\";\nimport { motion } from \"framer-motion\";\nimport { variants } from \"../motion/variants\";\n\nconst Index = props => {\n  const [isVisible, setIsVisible] = React.useState(true);\n\n  const handleSetIsVisible = () => {\n    setIsVisible(!isVisible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Next-JS Applicaiton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"initial-scale=1.0, width=device-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSetIsVisible,\n      children: \"Hide Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        style: {\n          width: 100\n        },\n        animate: isVisible ? \"active\" : \"inactive\",\n        children: props.data.map(data => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 3,\n            xl: 2,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              variants: variants,\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 19\n              }, this)\n            }, data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Index;\nexport const getStaticProps = async props => {\n  return fetch(\"https://jsonplaceholder.typicode.com/todos\").then(res => res.json()).then(res => {\n    return {\n      props: {\n        data: res\n      }\n    };\n  });\n};","map":{"version":3,"sources":["/home/brian/Code/single-store-classes-next-app/src/pages/index.tsx"],"names":["React","Form","Head","Grid","motion","variants","Index","props","isVisible","setIsVisible","useState","handleSetIsVisible","width","data","map","title","id","getStaticProps","fetch","then","res","json"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,MAAT,QAA4C,eAA5C;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAEvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,KAAK,CAACU,QAAN,CAAe,IAAf,CAAlC;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BF,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAM,QAAA,GAAG,EAAC,YAAV;AACM,QAAA,IAAI,EAAC;AADX;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAM,QAAA,GAAG,EAAC,YAAV;AACM,QAAA,IAAI,EAAC;AADX;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAQ,MAAA,OAAO,EAAEG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,6BACE,QAAC,MAAD,CAAQ,GAAR;AAAY,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAnB;AAAiC,QAAA,OAAO,EAAEJ,SAAS,GAAG,QAAH,GAAc,UAAjE;AAAA,kBACGD,KAAK,CAACM,IAAN,CAAWC,GAAX,CAAgBD,IAAD,IAAU;AACxB,8BACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAA0B,YAAA,EAAE,EAAE,CAA9B;AAAiC,YAAA,EAAE,EAAE,CAArC;AAAwC,YAAA,EAAE,EAAE,CAA5C;AAAA,mCACE;AAAI,cAAA,QAAQ,EAAER,QAAd;AAAA,qCAGE;AAAA,0BAAKQ,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA;AAHF,eAESF,IAAI,CAACG,EAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AA6BD,CArCD;;AA6CA,eAAeV,KAAf;AAEA,OAAO,MAAMW,cAAc,GAAG,MAAOV,KAAP,IAA8C;AAC1E,SAAOW,KAAK,CAAC,4CAAD,CAAL,CACJC,IADI,CACEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADV,EAEJF,IAFI,CAEEC,GAAD,IAAS;AACb,WAAO;AACLb,MAAAA,KAAK,EAAE;AAAEM,QAAAA,IAAI,EAAEO;AAAR;AADF,KAAP;AAGD,GANI,CAAP;AAOD,CARM","sourcesContent":["import * as React from \"react\";\nimport Form from \"../components/Form\";\nimport Head from \"next/head\";\nimport { Grid } from \"@material-ui/core\";\nimport { motion, AnimateSharedLayout } from \"framer-motion\";\nimport { variants } from \"../motion/variants\";\n\n\nconst Index = (props) => {\n\n  const [isVisible, setIsVisible] = React.useState(true);\n\n  const handleSetIsVisible = () => {\n    setIsVisible(!isVisible);\n  };\n\n  return (\n    <>\n      <Head>\n        <link rel=\"stylesheet\"\n              href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n        <link rel=\"stylesheet\"\n              href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n        <title>Next-JS Applicaiton</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n      </Head>\n      <Form />\n      <button onClick={handleSetIsVisible}>Hide Data</button>\n      <Grid container>\n        <motion.div style={{width: 100}} animate={isVisible ? \"active\" : \"inactive\"}>\n          {props.data.map((data) => {\n            return (\n              <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\n                <ul variants={variants}\n\n                    key={data.id}>\n                  <li>{data.title}</li>\n                </ul>\n              </Grid>\n            );\n          })}\n        </motion.div>\n      </Grid>\n    </>\n  );\n};\n\ntype GetStaticPropsTypeInterface = {\n  props: {\n    data: {}[];\n  };\n};\n\nexport default Index;\n\nexport const getStaticProps = async (props: GetStaticPropsTypeInterface) => {\n  return fetch(\"https://jsonplaceholder.typicode.com/todos\")\n    .then((res) => res.json())\n    .then((res) => {\n      return {\n        props: { data: res }\n      };\n    });\n};\n"]},"metadata":{},"sourceType":"module"}